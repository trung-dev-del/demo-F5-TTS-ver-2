Metadata-Version: 2.4
Name: f5-tts
Version: 1.0.1
Summary: F5-TTS: A Fairytaler that Fakes Fluent and Faithful Speech with Flow Matching
License: MIT License
Project-URL: Homepage, https://github.com/SWivid/F5-TTS
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: accelerate>=0.33.0
Requires-Dist: bitsandbytes>0.37.0; platform_machine != "arm64" and platform_system != "Darwin"
Requires-Dist: cached_path
Requires-Dist: click
Requires-Dist: datasets
Requires-Dist: ema_pytorch>=0.5.2
Requires-Dist: gradio>=3.45.2
Requires-Dist: hydra-core>=1.3.0
Requires-Dist: jieba
Requires-Dist: librosa
Requires-Dist: matplotlib
Requires-Dist: numpy<=1.26.4
Requires-Dist: pydub
Requires-Dist: pypinyin
Requires-Dist: safetensors
Requires-Dist: soundfile
Requires-Dist: tomli
Requires-Dist: torch>=2.0.0
Requires-Dist: torchaudio>=2.0.0
Requires-Dist: torchdiffeq
Requires-Dist: tqdm>=4.65.0
Requires-Dist: transformers
Requires-Dist: transformers_stream_generator
Requires-Dist: vocos
Requires-Dist: wandb
Requires-Dist: x_transformers>=1.31.14
Provides-Extra: eval
Requires-Dist: faster_whisper==0.10.1; extra == "eval"
Requires-Dist: funasr; extra == "eval"
Requires-Dist: jiwer; extra == "eval"
Requires-Dist: modelscope; extra == "eval"
Requires-Dist: zhconv; extra == "eval"
Requires-Dist: zhon; extra == "eval"
Dynamic: license-file

# F5-TTS-Vietnamese
Fine-tuning pipline for training a Vietnamese speech synthesis model using the F5-TTS architecture.

## Installation

### Create a separate environment if needed

```bash
# Create a python 3.10 conda env (you could also use virtualenv)
conda create -n f5-tts python=3.10
conda activate f5-tts
```

### Install PyTorch

> ```bash
> # Install pytorch with your CUDA version, e.g.
> pip install torch==2.4.0+cu124 torchaudio==2.4.0+cu124 --extra-index-url https://download.pytorch.org/whl/cu124
> ```

### Install f5-tts module:

> ```bash
> cd F5-TTS-Vietnamese
> pip install -e .
> ```

### Install sox, ffmpeg

> ```bash
> sudo apt-get update
> sudo apt-get install sox ffmpeg
> ```

## Fine-tuning pipline

Steps:

- Prepare audio_name data and corresponding text
- Add vocabulary from your dataset that is not present in the pretrained model's vocabulary
- Expand the pretrained model's embedding to support the new vocabulary set
- Feature extraction
- Perform fine-tuning

```bash
bash fine-tuning.sh
```

### Inference

```bash
bash infer.sh
```
